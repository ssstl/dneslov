import { Component } from 'react/lib/React'
import MemorySpan from 'MemorySpan'
import ReactScrollPagination from 'react-scroll-pagination/src/index'
import Collapsible from 'react-materialize/lib/Collapsible'
require('materialize-css/js/jquery.easing.1.4')
require('materialize-css/js/velocity.min')
require('materialize-css/js/global')
require('materialize-css/js/collapsible')

export default class MemorySpans extends Component {
   static defaultProps = {
      memories: [],
      total_memories: 0,
      onFetchNext: null
   }

   fetchNext = () => {
      if (this.props.total_memories > this.props.memories.length && ! this.isRequesting) {
         console.log("SPANS", this.props)
         this.isRequesting = true
         this.props.onFetchNext()
      }
   }

   componentWillReceiveProps = (nextProps) => {
      this.isRequesting = false
   }


   render = () => {
      let rendered

      if (this.props.memories.length > 0) {
         rendered = (
            <Collapsible
               className='collection'>
               {this.props.memories.map((memory) => <MemorySpan key={memory.slug} memory={memory} />)}
            <ReactScrollPagination
               fetchFunc={this.fetchNext} /></Collapsible>)
      } else {
         rendered = (
            <div className='card-panel'>
               <p className='flow-text'>Не было ничто найденым</p></div>)
      }

      return (
         <div className='row'>
            {rendered}</div>)}}
