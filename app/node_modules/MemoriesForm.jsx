import { Component } from 'react/lib/React'
import PickMeUpCalendar from 'PickMeUpCalendar'
import CalendariesCloud from 'CalendariesCloud'
import SearchField from 'SearchField'
import SearchConditions from 'SearchConditions'

export default class MemoriesForm extends Component {
   static defaultProps = {
      date: '',
      julian: false,
      calendaries_used: [],
      calendaries_cloud: [],
      query: []
   }

   state = {
      julian: this.props.julian,
      with_date: this.props.date,
      in_calendaries: this.props.calendaries_used,
      with_tokens: this.props.query
   }

   constructor(props) {
      super(props)
      console.log(util.inspect(props))
      //this.onSubmit = this.onSubmit.bind(this)
      //this.onChildUpdate = this.onChildUpdate.bind(this)
   }

   calendariesUsed = () => {
      return this.state.in_calendaries.map((slug) => {
         return this.props.calendaries_cloud.reduce((c, calendary) => {
            return c || calendary.slug == slug && calendary || null
         })
      })
   }

   render = () => {
      return (
         <div className='row'>
            <form>
               <div className='col s12 m5 l3 xl2'>
                  <div className='hidden' id='calendary' />
                  <div className='row'>
                     <PickMeUpCalendar
                        onUpdate={this.onChildUpdate} />
                     <CalendariesCloud
                        calendaries={this.props.calendaries_cloud}
                        calendaries_used={this.props.calendaries_used}
                        onAct={this.onCloudAct} />
                  </div>
               </div>
               <div className='col s12 m7 l9 xl10'>
                  <SearchField
                     query={this.state.with_tokens}
                     onUpdate={this.onSearchUpdate} />
                  <SearchConditions
                     date={this.state.with_date}
                     calendaries={this.calendariesUsed()}
                     query={this.state.with_tokens}
                     onAct={this.onSearchAct} />
               </div>
            </form>
         </div>
      )
   }

   onCloudAct = (data) => {
      console.log("onCloudUpdate", data)

      this.state.in_calendaries << data.slug

      this.submit()
   }

   onSearchAct = (data) => {
      console.log("onSearchAct", data)

      if (data.date) {
         this.state.with_date = undefined
      } else if (data.slug) {
         delete this.state.in_calendaries[this.state.in_calendaries.indexOf(data.slug)]
      } else if (data.token) {
         delete this.state.with_tokens[this.state.with_tokens.indexOf(data.token)]
      }

      this.submit()
   }

   onSearchUpdate = (tokens) => {
      this.state.with_tokens = tokens

      this.submit()
   }

   onChildUpdate = (value) => {
      console.log("onChildUpdate", value)

      Object.keys(value).forEach((key) => {
         this.state[key] = value[key]
      })

      this.submit()
   }

   submit = () => {
      console.log("Sending...", this.state)

      $.get('/index.json', this.state, (data) => {
         console.log("SUCCESS", util.inspect(data))
      }, 'JSON')
   }
}
