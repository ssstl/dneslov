import { Component } from 'react/lib/React'
import PickMeUpCalendar from 'PickMeUpCalendar'

export default class MemoriesForm extends Component {
   static defaultProps = {
      with_date: '',
      in_calendaries: '',
      julian: false,
      cloud: null
   }

   state = {
      with_date: this.props.with_date,
      in_calendaries: this.props.in_calendaries,
      julian: this.props.julian,
   }

   constructor(props) {
      super(props)
      console.log(util.inspect(props))
      //this.onSubmit = this.onSubmit.bind(this)
      //this.onChildUpdate = this.onChildUpdate.bind(this)
   }

   //isJulian = () => {
      //return ($('#julian:checked').length == 1);
   //}

//   getToday = () => {
//      today = new Date;
//
//      if (this.state.julian) {
//         today.setDate(today.getDate() - 13);
//      }
//      today.setTime(today.getTime() + 8*60*60*1000);
   //
//      return today;
//   }

   render = () => {
   // .row
   //  - @calendary_cloud.decorate.each do |calendary|
   //  - action_class = @calendary_cloud.include?(calendary.object) && 'hidden add' || 'add'
   // = calendary.chip_for( @locales, 'add', action_class )
      return (
         <div className='row'>
            <form>
               <PickMeUpCalendar
                  onUpdate={this.onChildUpdate} />
            </form>
         </div>
      )
   }

   onChildUpdate = (value) => {
      console.log("onChildUpdate", value)
      Object.keys(value).forEach((key) => {
         this.state[key] = value[key]
      })

      this.submit()
   }

   submit = () => {
      $.get('/index.json', this.state, (data) => {
         console.log("SUCCESS", util.inspect(data))
      }, 'JSON')
   }
//
////      $('#calendar').on('pickmeup-change', function (e) {
//   onPickmeupChange = (e) => {
//      console.log("selected date", e.detail.date)
//      this.submit()
//      //$('form#common-data input[name=with_date]').attr('value', e.detail.formatted_date);
//      //      filter_request()
//   }
//
////      $('#calendar .pmu-yesterday').on('click', function (e) {
//   onYesterdayClick = (e) => {
//      e.preventDefault();
//      e.stopPropagation();
//      date = pmu.get_date();
//      date.setDate(date.getDate() - 1);
//      pmu.set_date(date);
//      $('form#common-data input[name=with_date]').attr('value', pmu.get_date(true));
//      filter_request()
//   }
////      $('#calendar .pmu-tomorrow').on('click', function (e) {
//   onTomorrowClick = (e) => {
//      e.preventDefault();
//      e.stopPropagation();
//      date = pmu.get_date();
//      date.setDate(date.getDate() + 1);
//      pmu.set_date(date);
//      $('form#common-data input[name=with_date]').attr('value', pmu.get_date(true));
//      filter_request()
//   }
////      $('#calendar input[name="calendar-style"]').on('change', function (e) {
//   onChange = (e) => {
//      new_calendar_style = $(this).val();
//      if (new_calendar_style != calendar_style) {
//         new_date = pmu.get_date();
//         if (new_calendar_style == 0) {
//            new_date.setDate(new_date.getDate() - 13);
//         } else {
//            new_date.setDate(new_date.getDate() + 13);
//         }
//         pmu.set_date(new_date, new_date);
//         calendar_style = new_calendar_style;
//         $('form#common-data input[name=with_date]').attr('value', pmu.get_date(true));
//         filter_request()
//      }
//   }
}
