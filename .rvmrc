#!/bin/bash -l

set -x
# from gemfile
gemruby=$(cat Gemfile|grep ^ruby)
if [[ "$gemruby" == *engine* ]]; then
   ruby_type=$(echo "$gemruby"|sed "s/.*engine[: ][^\"']\+.\([^\"']\+\).*/\1/")
   ruby_version=$(echo "$gemruby"|sed "s/.*engine_version[: ][^\"']\+.\([^\"']\+\).*/\1/")
elif [ -n "$gemruby" ]; then
   ruby_type='ruby'
   ruby_version=$(echo "$gemruby"|sed "s/ruby '\([^\"']\+\).*/\1/")
fi
echo 1a. $ruby_type
echo 2a. $ruby_version

# from .ruby-version
if [ -z "$ruby_version" -o -z "$ruby_type" ]; then
   ruby_version=$(cat .ruby-version|sed "s/[^0-9.]*\(.*\)$/\1/")
   ruby_type=$(cat .ruby-version|sed "s/^\([^0-9.]*\).*$/\1/")
   if [ -z "$ruby_type" ]; then
      ruby_type=ruby
   fi
fi
echo 1b. $ruby_type
echo 2b. $ruby_version

if [ -z "$ruby_version" -o -z "$ruby_type" ]; then
   set -
   info=$(rvm info)
   set -x
   ruby_type=$(echo "$info"|grep "^  ruby:" -A 6|grep " interpreter"|sed "s/[^\"]*\"\([^\"]*\)\"/\1/")
   echo 1c. $ruby-type

   ruby_version=$(echo "$info"|grep "^  ruby:" -A 6|grep " version"|sed "s/[^\"]*\"\([^\"]*\)\"/\1/")
   echo 2c. $ruby_version
   if [ -z "$ruby_version" ]; then
      ruby_path=$(echo "$info"|grep "^  homes:" -A 2|grep " ruby:"|sed "s/[^\"]*\"\([^\"]*\)\"/\1/")
      ruby_version=$(basename "$ruby_path")
      echo 4. $ruby_version
   fi
fi

ruby_gemset=$(basename $(pwd))-$(ruby_version)
if [ "$ruby_version" = 'not set' ]; then
   # selecting first ruby
   ruby_version=$(rvm list|grep rubies -A 2|grep "\[.*\]"|sed "s/.*\(ruby[^\[]\+\)\[.*/\1/")
   echo 1d. $ruby_version
fi

if [ -z "$(cat ~/.rvm/config/known_strings|grep ${ruby_type}-$ruby_version)" ]; then
   echo ${ruby_type}-$ruby_version >> ~/.rvm/config/known_strings
fi
echo will use ${ruby_type}-$ruby_version@$ruby_gemset with create flag
set -

if ! rvm use ${ruby_type}-$ruby_version@$ruby_gemset --create; then
   rvm install ${ruby_type}-$ruby_version
   rvm use ${ruby_type}-$ruby_version@$ruby_gemset --create
fi

set -x
if [ -z "$(echo "$PATH"|grep "$(pwd)/.bundle/bin")" ]; then
   echo "Settings..."
   if [ -z "$_ORIGINAL_GEM_PATH" ]; then
      export _ORIGINAL_GEM_PATH=$GEM_PATH
   fi
   export PATH=$(pwd)/bin:$(pwd)/.bundle/bin:$PATH
   export GEM_HOME=$(pwd)/.bundle
   export GEM_PATH=$GEM_HOME:$GEM_PATH
   bundler=$(which bundler)
   export RUBYLIB=$(dirname $bundler)
fi
set -

bundle platform &>/dev/null || gem install bundler --no-ri --no-rdoc
